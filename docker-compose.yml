version: '3.4'

services:
  nginx:
    # https://hub.docker.com/_/nginx
    image: nginx:1.19.2-alpine
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/static
      - media:/media
    depends_on:
      - backend

  db:
    # https://hub.docker.com/_/postgres
    image: postgres:12.4-alpine
    expose:
      - "5432"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./backend-project/contrib/docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      # /var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'

  migration_db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 'pass'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'small_eod'
    ports:
      - "127.0.0.1:3306:3306"
    expose:
      - "3306"
    volumes:
      - ./backend-project/small_eod/migration_v1/sql_scripts:/docker-entrypoint-initdb.d:ro

  backend:
    build:
      context: ./backend-project
      target: dev
    depends_on:
      - db
    volumes:
      - ./backend-project:/code
      - static:/code/static
      - media:/code/media
    environment:
      DATABASE_URL: postgres://user:pass@db:5432/small_eod
      MIGRATION_DATABASE_URL: mysql://root:pass@migration_db/small_eod
      MINIO_ACCESS_KEY: test
      MINIO_SECRET_KEY: test8chars
      MINIO_URL: http://minio:9000
      SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: "x-x.apps.googleusercontent.com"
      SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: "x-puMp99EjG7"
      # SECRET_KEY
      # DJANGO_ALLOWED_HOSTS
    expose:
      - "8000"

  frontend:
    build:
      context: ./frontend-project
    environment:
      COMMIT_SHA: '${COMMIT_SHA:-unknown_sha}'
      COMMIT_BRANCH: '${COMMIT_BRANCH:-unknown_branch}'
    volumes:
      - ./frontend-project:/code
    expose:
      - "8000"

  minio:
    # https://hub.docker.com/r/minio/minio/
    image: minio/minio:RELEASE.2020-01-16T22-40-29Z
    ports:
      - "9000:9000"
    expose:
      - 9000
    command: server /data
    volumes:
      - ./dev-data/minio:/data
    environment:
      MINIO_ACCESS_KEY: test
      MINIO_SECRET_KEY: test8chars

volumes:
  static:
  media:
